# Dockerfile for all builds. The FROM part is switched out. Built by build.sh. See README. First three lines are stripped.
FROM php
##################################################################################

LABEL php_xdebug_version="3"

# Some parts are based on https://hub.docker.com/r/alexcheng/magento2/dockerfile

# PHP extensions and msmtp
RUN requirements="msmtp libmcrypt-dev libwebp-dev libmcrypt4 libcurl3-dev libfreetype6 libjpeg62-turbo libjpeg62-turbo-dev libpng-dev libxpm-dev libfreetype6-dev libicu-dev libxslt1-dev unzip libbz2-dev libzip-dev openssh-client libonig-dev git ssh-askpass libssl-dev libyaml-dev" \
    && apt-get update \
    && apt-get install -y $requirements \
    && docker-php-ext-install pdo_mysql \
    && docker-php-ext-install mysqli \
    && docker-php-ext-install soap \
    && docker-php-ext-install xsl \
    && docker-php-ext-install zip \
    && docker-php-ext-install intl \
    && docker-php-ext-install bcmath \
    && docker-php-ext-install bz2 \
    && docker-php-ext-install sockets \
    && docker-php-ext-configure gd @@gd_requirements@@ \
    && docker-php-ext-install gd \
    && docker-php-ext-install exif \
    && docker-php-ext-install opcache \
    && requirementsToRemove="libmcrypt-dev libwebp-dev libcurl3-dev libpng-dev libfreetype6-dev libjpeg62-turbo-dev libxpm-dev libbz2-dev libzip-dev libonig-dev" \
    && apt-get purge -y $requirementsToRemove \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install xdebug (based on https://gist.github.com/chadrien/c90927ec2d160ffea9c4)
RUN yes | pecl install xdebug

# Install yaml
RUN yes | pecl install yaml && echo "extension=yaml.so" > /usr/local/etc/php/conf.d/ext-yaml.ini

# Riptide no longer enabled xdebug in it's image, for performance reasons.
# Please mount
# For Riptide < 0.6: The PHP commands/services in the Riptide Community Repository mount these settings already
# For Riptide >= 0.6: Use the plugin riptide-plugin-php-xdebug to toggle Xdebug.
#
# Previously these were the settings for Xdebug:
#&& echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
#&& echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
#&& echo "xdebug.remote_autostart=off" >> /usr/local/etc/php/conf.d/xdebug.ini

# Composer 1
RUN curl -sS https://getcomposer.org/installer | php -- --1 \
    && mv composer.phar /usr/local/bin/composer

# Composer 2
RUN curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/local/bin/composer2

# wp-cli
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \
    && chmod +x ./wp-cli.phar \
    && mv ./wp-cli.phar /usr/local/bin/ \
    && ln -s /usr/local/bin/wp-cli.phar /usr/local/bin/wp-cli \
    && ln -s /usr/local/bin/wp-cli.phar /usr/local/bin/wp

# Magerun
RUN curl -O https://files.magerun.net/n98-magerun.phar \
    && chmod +x ./n98-magerun.phar \
    && mv ./n98-magerun.phar /usr/local/bin/ \
    && ln -s /usr/local/bin/n98-magerun.phar /usr/local/bin/magerun \
    && ln -s /usr/local/bin/n98-magerun.phar /usr/local/bin/mr

# Magerun2
RUN curl -O https://files.magerun.net/n98-magerun2.phar \
    && chmod +x ./n98-magerun2.phar \
    && mv ./n98-magerun2.phar /usr/local/bin/ \
    && ln -s /usr/local/bin/n98-magerun2.phar /usr/local/bin/mr2 \
    && ln -s /usr/local/bin/n98-magerun2.phar /usr/local/bin/magerun2

## Symfony
RUN curl -O https://get.symfony.com/cli/installer \
    && chmod +x ./installer \
    && ./installer --install-dir /usr/local/bin \
    && rm ./installer

# Additional settings
# || true for non-apache variants
RUN a2enmod rewrite || true \
    && echo "memory_limit=-1" > /usr/local/etc/php/conf.d/memory-limit.ini \
    && echo "sendmail_path = /usr/bin/msmtp -t" > /usr/local/etc/php/conf.d/sendmail.ini

# PHP-FPM:
# Since we use a template build, this get's executed in all images... could possibly
# change that in the future
RUN mkdir -p /usr/local/etc/php-fpm.d/ \
    # Allow the FPM process to access the environment variables passed in
    && echo "clear_env = no" >> /usr/local/etc/php-fpm.d/www.conf \
    # logging
    && echo "php_admin_flag[log_errors] = on" >> /usr/local/etc/php-fpm.d/www.conf

# Make /src the root source directory
RUN rm -rf /usr/src && ln -s /src /usr/src
WORKDIR /src
